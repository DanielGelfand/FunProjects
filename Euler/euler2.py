'''
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2,
the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose
values do not exceed four million, find the sum of the even-valued terms.
'''

def sumEvenTerms():

    sum = 0
    currFinNum = 1
    nextFinNum = 2

    #Range just has to be big enough to include a fib number above 4 million
    for i in range(4000000):

        #If the current fibonacci number exceeds 4*10^6 then return the sum
        if( currFinNum > (4000000) ):
            return sum

        #Check if th current fibonacci number is even
        #If yes, then add to sum
        if( currFinNum % 2 == 0):
            sum += currFinNum

        #Temporary variable to not lose value attached to currFinNum
        tempNum = currFinNum
        #Adjust currFinNum and nextFinNum
        currFinNum = nextFinNum
        nextFinNum = currFinNum + tempNum

        #print(currFinNum)

print(sumEvenTerms()) #4613732
